
NHS_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001a6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000001fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  0000094d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000001b  00000000  00000000  0000096d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000ce  00000000  00000000  00000988  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000073  00000000  00000000  00000a56  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000016e  00000000  00000000  00000ac9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000020  00000000  00000000  00000c38  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000078  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000162  00000000  00000000  00000cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 0000001e  00000000  00000000  00000e32  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  7c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  80:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  84:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  88:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 52 00 	call	0xa4	; 0xa4 <main>
  9c:	0c 94 d1 00 	jmp	0x1a2	; 0x1a2 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <main>:
#include <avr/io.h>

int main (){
  a4:	df 93       	push	r29
  a6:	cf 93       	push	r28
  a8:	cd b7       	in	r28, 0x3d	; 61
  aa:	de b7       	in	r29, 0x3e	; 62
  ac:	28 97       	sbiw	r28, 0x08	; 8
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	f8 94       	cli
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	cd bf       	out	0x3d, r28	; 61
	unsigned int L = 0x8;

	volatile unsigned long int j;
	volatile unsigned long int dummyVar;

	DDRA = 0xFF;
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	8a bb       	out	0x1a, r24	; 26
	PORTA = R + L;
  bc:	88 e1       	ldi	r24, 0x18	; 24
  be:	8b bb       	out	0x1b, r24	; 27

int main (){
	
	unsigned char i;
	unsigned int R = 0x10;
	unsigned int L = 0x8;
  c0:	48 e0       	ldi	r20, 0x08	; 8
  c2:	50 e0       	ldi	r21, 0x00	; 0
#include <avr/io.h>

int main (){
	
	unsigned char i;
	unsigned int R = 0x10;
  c4:	20 e1       	ldi	r18, 0x10	; 16
  c6:	30 e0       	ldi	r19, 0x00	; 0
	DDRA = 0xFF;
	PORTA = R + L;

	while(1){

		j = 0;
  c8:	19 82       	std	Y+1, r1	; 0x01
  ca:	1a 82       	std	Y+2, r1	; 0x02
  cc:	1b 82       	std	Y+3, r1	; 0x03
  ce:	1c 82       	std	Y+4, r1	; 0x04
		dummyVar = 0;
  d0:	1d 82       	std	Y+5, r1	; 0x05
  d2:	1e 82       	std	Y+6, r1	; 0x06
  d4:	1f 82       	std	Y+7, r1	; 0x07
  d6:	18 86       	std	Y+8, r1	; 0x08
	
		for(i = 0; i< 3; i++){
  d8:	60 e0       	ldi	r22, 0x00	; 0
		
			for(j = 0; j <= 200000; j++) dummyVar ++;
  da:	19 82       	std	Y+1, r1	; 0x01
  dc:	1a 82       	std	Y+2, r1	; 0x02
  de:	1b 82       	std	Y+3, r1	; 0x03
  e0:	1c 82       	std	Y+4, r1	; 0x04
  e2:	16 c0       	rjmp	.+44     	; 0x110 <main+0x6c>
  e4:	8d 81       	ldd	r24, Y+5	; 0x05
  e6:	9e 81       	ldd	r25, Y+6	; 0x06
  e8:	af 81       	ldd	r26, Y+7	; 0x07
  ea:	b8 85       	ldd	r27, Y+8	; 0x08
  ec:	01 96       	adiw	r24, 0x01	; 1
  ee:	a1 1d       	adc	r26, r1
  f0:	b1 1d       	adc	r27, r1
  f2:	8d 83       	std	Y+5, r24	; 0x05
  f4:	9e 83       	std	Y+6, r25	; 0x06
  f6:	af 83       	std	Y+7, r26	; 0x07
  f8:	b8 87       	std	Y+8, r27	; 0x08
  fa:	89 81       	ldd	r24, Y+1	; 0x01
  fc:	9a 81       	ldd	r25, Y+2	; 0x02
  fe:	ab 81       	ldd	r26, Y+3	; 0x03
 100:	bc 81       	ldd	r27, Y+4	; 0x04
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	a1 1d       	adc	r26, r1
 106:	b1 1d       	adc	r27, r1
 108:	89 83       	std	Y+1, r24	; 0x01
 10a:	9a 83       	std	Y+2, r25	; 0x02
 10c:	ab 83       	std	Y+3, r26	; 0x03
 10e:	bc 83       	std	Y+4, r27	; 0x04
 110:	89 81       	ldd	r24, Y+1	; 0x01
 112:	9a 81       	ldd	r25, Y+2	; 0x02
 114:	ab 81       	ldd	r26, Y+3	; 0x03
 116:	bc 81       	ldd	r27, Y+4	; 0x04
 118:	81 34       	cpi	r24, 0x41	; 65
 11a:	7d e0       	ldi	r23, 0x0D	; 13
 11c:	97 07       	cpc	r25, r23
 11e:	73 e0       	ldi	r23, 0x03	; 3
 120:	a7 07       	cpc	r26, r23
 122:	70 e0       	ldi	r23, 0x00	; 0
 124:	b7 07       	cpc	r27, r23
 126:	f0 f2       	brcs	.-68     	; 0xe4 <main+0x40>
			R = R << 1;
 128:	22 0f       	add	r18, r18
 12a:	33 1f       	adc	r19, r19
			L = L >> 1;
 12c:	56 95       	lsr	r21
 12e:	47 95       	ror	r20

			PORTA = R + L;
 130:	84 2f       	mov	r24, r20
 132:	82 0f       	add	r24, r18
 134:	8b bb       	out	0x1b, r24	; 27
	while(1){

		j = 0;
		dummyVar = 0;
	
		for(i = 0; i< 3; i++){
 136:	6f 5f       	subi	r22, 0xFF	; 255
 138:	63 30       	cpi	r22, 0x03	; 3
 13a:	79 f6       	brne	.-98     	; 0xda <main+0x36>
 13c:	60 e0       	ldi	r22, 0x00	; 0

		}

		for(i = 0; i< 3; i++){
		
			for(j = 0; j <= 200000; j++) dummyVar ++;
 13e:	19 82       	std	Y+1, r1	; 0x01
 140:	1a 82       	std	Y+2, r1	; 0x02
 142:	1b 82       	std	Y+3, r1	; 0x03
 144:	1c 82       	std	Y+4, r1	; 0x04
 146:	16 c0       	rjmp	.+44     	; 0x174 <main+0xd0>
 148:	8d 81       	ldd	r24, Y+5	; 0x05
 14a:	9e 81       	ldd	r25, Y+6	; 0x06
 14c:	af 81       	ldd	r26, Y+7	; 0x07
 14e:	b8 85       	ldd	r27, Y+8	; 0x08
 150:	01 96       	adiw	r24, 0x01	; 1
 152:	a1 1d       	adc	r26, r1
 154:	b1 1d       	adc	r27, r1
 156:	8d 83       	std	Y+5, r24	; 0x05
 158:	9e 83       	std	Y+6, r25	; 0x06
 15a:	af 83       	std	Y+7, r26	; 0x07
 15c:	b8 87       	std	Y+8, r27	; 0x08
 15e:	89 81       	ldd	r24, Y+1	; 0x01
 160:	9a 81       	ldd	r25, Y+2	; 0x02
 162:	ab 81       	ldd	r26, Y+3	; 0x03
 164:	bc 81       	ldd	r27, Y+4	; 0x04
 166:	01 96       	adiw	r24, 0x01	; 1
 168:	a1 1d       	adc	r26, r1
 16a:	b1 1d       	adc	r27, r1
 16c:	89 83       	std	Y+1, r24	; 0x01
 16e:	9a 83       	std	Y+2, r25	; 0x02
 170:	ab 83       	std	Y+3, r26	; 0x03
 172:	bc 83       	std	Y+4, r27	; 0x04
 174:	89 81       	ldd	r24, Y+1	; 0x01
 176:	9a 81       	ldd	r25, Y+2	; 0x02
 178:	ab 81       	ldd	r26, Y+3	; 0x03
 17a:	bc 81       	ldd	r27, Y+4	; 0x04
 17c:	81 34       	cpi	r24, 0x41	; 65
 17e:	7d e0       	ldi	r23, 0x0D	; 13
 180:	97 07       	cpc	r25, r23
 182:	73 e0       	ldi	r23, 0x03	; 3
 184:	a7 07       	cpc	r26, r23
 186:	70 e0       	ldi	r23, 0x00	; 0
 188:	b7 07       	cpc	r27, r23
 18a:	f0 f2       	brcs	.-68     	; 0x148 <main+0xa4>

			R = R >> 1;
 18c:	36 95       	lsr	r19
 18e:	27 95       	ror	r18
			L = L << 1;
 190:	44 0f       	add	r20, r20
 192:	55 1f       	adc	r21, r21

			PORTA = R + L;
 194:	84 2f       	mov	r24, r20
 196:	82 0f       	add	r24, r18
 198:	8b bb       	out	0x1b, r24	; 27

			PORTA = R + L;

		}

		for(i = 0; i< 3; i++){
 19a:	6f 5f       	subi	r22, 0xFF	; 255
 19c:	63 30       	cpi	r22, 0x03	; 3
 19e:	79 f6       	brne	.-98     	; 0x13e <main+0x9a>
 1a0:	93 cf       	rjmp	.-218    	; 0xc8 <main+0x24>

000001a2 <_exit>:
 1a2:	f8 94       	cli

000001a4 <__stop_program>:
 1a4:	ff cf       	rjmp	.-2      	; 0x1a4 <__stop_program>
