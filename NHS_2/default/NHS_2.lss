
NHS_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000012c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000180  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  000008d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000001b  00000000  00000000  000008f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000c3  00000000  00000000  0000090c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000073  00000000  00000000  000009cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000116  00000000  00000000  00000a42  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000020  00000000  00000000  00000b58  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000081  00000000  00000000  00000b78  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000a0  00000000  00000000  00000bf9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 0000001e  00000000  00000000  00000c99  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   8:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
   c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  10:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  14:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  18:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  1c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  20:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  24:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  28:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  2c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  30:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  34:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  38:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  3c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  40:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  44:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  48:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  4c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  50:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  54:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  58:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  5c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  60:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  64:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  68:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  6c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  70:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  74:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  78:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  7c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  80:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  84:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>
  88:	0c 94 50 00 	jmp	0xa0	; 0xa0 <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 52 00 	call	0xa4	; 0xa4 <main>
  9c:	0c 94 94 00 	jmp	0x128	; 0x128 <_exit>

000000a0 <__bad_interrupt>:
  a0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a4 <main>:
#include <avr/io.h>

int main (){
  a4:	df 93       	push	r29
  a6:	cf 93       	push	r28
  a8:	cd b7       	in	r28, 0x3d	; 61
  aa:	de b7       	in	r29, 0x3e	; 62
  ac:	28 97       	sbiw	r28, 0x08	; 8
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	f8 94       	cli
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	0f be       	out	0x3f, r0	; 63
  b6:	cd bf       	out	0x3d, r28	; 61
	unsigned char portData;

	volatile unsigned long int j;
	volatile unsigned long int dummyVar;

	DDRA = 0xFF;
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	8a bb       	out	0x1a, r24	; 26


	while(1){

		j = 0;
  bc:	19 82       	std	Y+1, r1	; 0x01
  be:	1a 82       	std	Y+2, r1	; 0x02
  c0:	1b 82       	std	Y+3, r1	; 0x03
  c2:	1c 82       	std	Y+4, r1	; 0x04
		dummyVar = 0;
  c4:	1d 82       	std	Y+5, r1	; 0x05
  c6:	1e 82       	std	Y+6, r1	; 0x06
  c8:	1f 82       	std	Y+7, r1	; 0x07
  ca:	18 86       	std	Y+8, r1	; 0x08
  cc:	38 e0       	ldi	r19, 0x08	; 8
		portData = 0x80;
  ce:	20 e8       	ldi	r18, 0x80	; 128
		
		for(i = 0; i< 8; i++){
		
			PORTA = portData;
  d0:	2b bb       	out	0x1b, r18	; 27
	
			for(j = 0; j <= 20000; j++) dummyVar ++;
  d2:	19 82       	std	Y+1, r1	; 0x01
  d4:	1a 82       	std	Y+2, r1	; 0x02
  d6:	1b 82       	std	Y+3, r1	; 0x03
  d8:	1c 82       	std	Y+4, r1	; 0x04
  da:	16 c0       	rjmp	.+44     	; 0x108 <main+0x64>
  dc:	8d 81       	ldd	r24, Y+5	; 0x05
  de:	9e 81       	ldd	r25, Y+6	; 0x06
  e0:	af 81       	ldd	r26, Y+7	; 0x07
  e2:	b8 85       	ldd	r27, Y+8	; 0x08
  e4:	01 96       	adiw	r24, 0x01	; 1
  e6:	a1 1d       	adc	r26, r1
  e8:	b1 1d       	adc	r27, r1
  ea:	8d 83       	std	Y+5, r24	; 0x05
  ec:	9e 83       	std	Y+6, r25	; 0x06
  ee:	af 83       	std	Y+7, r26	; 0x07
  f0:	b8 87       	std	Y+8, r27	; 0x08
  f2:	89 81       	ldd	r24, Y+1	; 0x01
  f4:	9a 81       	ldd	r25, Y+2	; 0x02
  f6:	ab 81       	ldd	r26, Y+3	; 0x03
  f8:	bc 81       	ldd	r27, Y+4	; 0x04
  fa:	01 96       	adiw	r24, 0x01	; 1
  fc:	a1 1d       	adc	r26, r1
  fe:	b1 1d       	adc	r27, r1
 100:	89 83       	std	Y+1, r24	; 0x01
 102:	9a 83       	std	Y+2, r25	; 0x02
 104:	ab 83       	std	Y+3, r26	; 0x03
 106:	bc 83       	std	Y+4, r27	; 0x04
 108:	89 81       	ldd	r24, Y+1	; 0x01
 10a:	9a 81       	ldd	r25, Y+2	; 0x02
 10c:	ab 81       	ldd	r26, Y+3	; 0x03
 10e:	bc 81       	ldd	r27, Y+4	; 0x04
 110:	81 32       	cpi	r24, 0x21	; 33
 112:	4e e4       	ldi	r20, 0x4E	; 78
 114:	94 07       	cpc	r25, r20
 116:	40 e0       	ldi	r20, 0x00	; 0
 118:	a4 07       	cpc	r26, r20
 11a:	40 e0       	ldi	r20, 0x00	; 0
 11c:	b4 07       	cpc	r27, r20
 11e:	f0 f2       	brcs	.-68     	; 0xdc <main+0x38>

			portData = portData >> 1;
 120:	26 95       	lsr	r18
 122:	31 50       	subi	r19, 0x01	; 1

		j = 0;
		dummyVar = 0;
		portData = 0x80;
		
		for(i = 0; i< 8; i++){
 124:	a9 f6       	brne	.-86     	; 0xd0 <main+0x2c>
 126:	ca cf       	rjmp	.-108    	; 0xbc <main+0x18>

00000128 <_exit>:
 128:	f8 94       	cli

0000012a <__stop_program>:
 12a:	ff cf       	rjmp	.-2      	; 0x12a <__stop_program>
